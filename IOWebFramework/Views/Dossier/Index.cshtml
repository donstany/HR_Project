@model IOWebFramework.Core.Models.Dossier.EmployeeMainInfoViewModel

@{
    var dossierLabel = Convert.ToString(ViewBag.DossierLabel);

    var tabToOpen = "";
    if (ViewBag.TabToOpen != null)
    {
        tabToOpen = ViewBag.TabToOpen;
    }
    bool isUserDossier = false;
    if (ViewBag.isUserDossier != null)
    {
        isUserDossier = ViewBag.isUserDossier;
    }
}

<div class="row">
    <div class="card card-body bg-light">
        <div><strong>ДОСИЕ НА СЛУЖИТЕЛЯ:</strong></div>
        <div>@dossierLabel</div>
    </div>
</div>

<nav>
    <div class="nav nav-tabs" id="nav-tab" role="tablist">
        <a class="nav-item nav-link active" id="nav-main-tab" data-toggle="tab" href="#nav-main" role="tab" aria-controls="nav-main" aria-selected="false"><i class="fas fa-info-circle"></i> Основна информация</a>
        <a class="nav-item nav-link" id="nav-training-tab" data-toggle="tab" href="#nav-training" role="tab" aria-controls="nav-training" aria-selected="true"><i class="fas fa-chalkboard-teacher"></i> Обучения</a>
        <a class="nav-item nav-link" id="nav-diploma-tab" data-toggle="tab" href="#nav-diploma" role="tab" aria-controls="nav-diploma" aria-selected="false"><i class="fas fa-book-open"></i> Дипломи</a>
        <a class="nav-item nav-link" id="nav-certificate-tab" data-toggle="tab" href="#nav-certificate" role="tab" aria-controls="nav-certificate" aria-selected="false"><i class="fas fa-award"></i> Сертификати</a>
    </div>
</nav>

<div class="tab-content" id="nav-tabContent">
    <div class="tab-pane fadeshow active" id="nav-main" role="tabpanel" aria-labelledby="nav-main-tab">
        <br />
        @*<div class="callout callout-info">
            <h5><i class="fas fa-exclamation-triangle"></i> Основна информация за служителя</h5>
        </div>*@

        @await Html.PartialAsync("~/Views/Shared/Dossier/_MainInfoTab.cshtml", Model)
    </div>

    <div class="tab-pane fade" id="nav-training" role="tabpanel" aria-labelledby="nav-training-tab">
        <br />
        @*<div class="callout callout-info">
            <h5><i class="fas fa-exclamation-triangle"></i> Обучения, на които служителя е записан или е присъствал/ще присъства</h5>
        </div>*@
        @if (!isUserDossier)
        {
            <div class="row">
                <div class="col-md-12 text-right pb-15">
                    <a asp-action="AddTraining" asp-route-personId="@ViewBag.PersonId" class="btn btn-success">
                        <i class="fa fa-plus"></i>
                        Добави Обучение
                    </a>
                </div>
            </div>
        }


        <div class="row">
            <div class="col-md-12">
                <table id="trainingsListTable" class="table table-hover table-striped"></table>
            </div>
        </div>

    </div>
    <div class="tab-pane fade" id="nav-diploma" role="tabpanel" aria-labelledby="nav-diploma-tab">
        <br />
        @*<div class="callout callout-info">
            <h5><i class="fas fa-exclamation-triangle"></i> Дипломи, издадени на служителя </h5>
        </div>*@

        @if (!isUserDossier)
        {
            <div class="row">
                <div class="col-md-12 text-right pb-15">
                    <a asp-action="AddDiploma" asp-route-personId="@ViewBag.PersonId" class="btn btn-success">
                        <i class="fa fa-plus"></i>
                        Добави Диплома
                    </a>
                </div>
            </div>
        }

        <div class="row">
            <div class="col-md-12">
                <table id="diplomasListTable" class="table table-hover table-striped"></table>
            </div>
        </div>
    </div>
    <div class="tab-pane fade" id="nav-certificate" role="tabpanel" aria-labelledby="nav-certificate-tab">
        <br />
        @*<div class="callout callout-info">
            <h5><i class="fas fa-exclamation-triangle"></i> Сертификати, издадени на служителя</h5>
        </div>*@
        @if (!isUserDossier)
        {
            <div class="row">
                <div class="col-md-12 text-right pb-15">
                    <a asp-action="AddCertificate" asp-route-personId="@ViewBag.PersonId" class="btn btn-success">
                        <i class="fa fa-plus"></i>
                        Добави Сертификат
                    </a>
                </div>
            </div>
        }

        <div class="row">
            <div class="col-md-12">
                <table id="certificatesListTable" class="table table-hover table-striped"></table>
            </div>
        </div>
    </div>

</div>


@section scripts {
    <script>
        $(function () {
            var tabToOpen = '@tabToOpen';
            if (tabToOpen !== null) {
                $(tabToOpen).trigger('click')
            }

            var trainingsTable = $('#trainingsListTable').DataTable({
                ajax: {
                    "url": "@Url.Action("TrainingListData", "Dossier")",
                    "type": "POST",
                    "datatype": "json",
                    data: function (data) {
                        data.personId = @ViewBag.PersonId;
                    }
                },
                columns: [
                    {
                        name: 'trainingName',
                        data: 'trainingName',
                        title: 'Обучение',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'trainingCenter',
                        data: 'trainingCenter',
                        title: 'Обучителен център',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'DateStart',
                        data: 'startDate',
                        title: 'От дата',
                        sortable: true,
                        searchable: true,
                        "render": function (value) {
                            return JsonBGdate(value);
                        }
                    },
                    {
                        name: 'DateEnd',
                        data: 'endDate',
                        title: 'До дата',
                        sortable: true,
                        searchable: true,
                        "render": function (value) {
                            return JsonBGdate(value);
                        }
                    },
                    {
                        name: 'actions',
                        data: "id",
                        title: "",
                        sortable: false,
                        searchable: false,
                        className: "text-center noExport",
                        "render": function (value) {
                            if ('@isUserDossier' != 'True') {
                                return TemplateToHtml('#templateEdit', value);
                            }
                            return "";
                        }
                    },
                    {
                        name: 'delete',
                        data: "id",
                        title: "",
                        sortable: false,
                        searchable: false,
                        className: "text-center noExport",
                        "render": function (value) {
                            if ('@isUserDossier' != 'True') {
                                    return TemplateToHtml('#templateDelete', value); // value will be binded to {{this}} in  Handle bar template, in our case value is Id.
                            }
                            return "";
                        }
                    }
                ]
            });

            $(document).on('click', '#deleteTraining', deleteRowTraining);

            function deleteRowTraining(e) {
                e.preventDefault();

                var deleteLink = $(this);
                deleteLink.hide();
                var confirmButton = deleteLink.siblings(".delete-confirm");
                confirmButton.show();

                var cancelDelete = function () {
                    removeEvents();
                    showDeleteLink();
                };

                var deleteItem = function () {
                    removeEvents();
                    confirmButton.hide();
                    $.post(
                        '@Url.Action("DeleteTraining","Dossier")',
                        AddAntiForgeryToken({ id: confirmButton.attr('data-delete-id') }))
                       .done(function () {
                           var parentRow = deleteLink.parents("tr:first");
                           parentRow.fadeOut('fast', function () {
                               parentRow.remove();
                               messageHelper.ShowSuccessMessage("Успешно изтриване!");
                           });
                       }).fail(function (data) {
                           messageHelper.ShowErrorMessage("Възникна проблем при изтриване! Записът не е изтрит!");
                       }).always(
                       function () {
                        trainingsTable.draw( true );
                       });
                    return false;
        };

                var removeEvents = function () {
                    confirmButton.off("click", deleteItem);
                    $(document).on("click", cancelDelete);
                    $(document).off("keypress", onKeyPress);
                };

                var showDeleteLink = function () {
                    confirmButton.hide();
                    deleteLink.show();
                };

                var onKeyPress = function (e) {
                    //Cancel if escape key pressed
                    if (e.which == 27) {
                        cancelDelete();
                    }
                };

                confirmButton.on("click", deleteItem);
                $(document).on("click", cancelDelete);
                $(document).on("keypress", onKeyPress);
                return false;
    }

            AddAntiForgeryToken = function (data) {
                data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
                return data;
            }

            var certificatesTable = $('#certificatesListTable').DataTable({
                ajax: {
                    "url": "@Url.Action("CertificateListData", "Dossier")",
                    "type": "POST",
                    "datatype": "json",
                    data: function (data) {
                        data.personId = @ViewBag.PersonId;
                    }
                },
                columns: [
                    {
                        name: 'certificateNameIssuer',
                        data: 'certificateNameIssuer',
                        title: 'Име на Сертификат',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'certificateType',
                        data: 'certificateType',
                        title: 'Тип на сертификат',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'dateStart',
                        data: 'dateStart',
                        title: 'Дата на издаване',
                        sortable: true,
                        searchable: true,
                        "render": function (value) {
                            return JsonBGdate(value);
                        }
                    },
                    {
                        name: 'dateEnd',
                        data: 'dateEnd',
                        title: 'Валиден до',
                        sortable: true,
                        searchable: true,
                        "render": function (value) {
                            return JsonBGdate(value);
                        }
                    },
                    {
                        name: 'actions',
                        data: "id",
                        title: "",
                        sortable: false,
                        searchable: false,
                        className: "text-center noExport",
                        "render": function (value) {
                            if ('@isUserDossier' != 'True') {
                                return TemplateToHtml('#certificateEdit', value);
                            }
                            return "";
                        }
                    },
                    {
                        name: 'delete',
                        data: "id",
                        title: "",
                        sortable: false,
                        searchable: false,
                        className: "text-center noExport",
                        "render": function (value) {
                            if ('@isUserDossier' != 'True') {
                                return TemplateToHtml('#certificateDelete', value);
                            }
                            return "";
                        }
                    }
                ]
            });

            $(document).on('click', '#deleteCertificate', deleteRowCertificate);

            function deleteRowCertificate(e) {
                e.preventDefault();

                var deleteLink = $(this);
                deleteLink.hide();
                var confirmButton = deleteLink.siblings(".delete-confirm");
                confirmButton.show();

                var cancelDelete = function () {
                    removeEvents();
                    showDeleteLink();
                };

                var deleteItem = function () {
                    removeEvents();
                    confirmButton.hide();
                    $.post(
                        '@Url.Action("DeleteCertificate","Ajax")',
                        AddAntiForgeryToken({ id: confirmButton.attr('data-delete-id') }))
                       .done(function () {
                           var parentRow = deleteLink.parents("tr:first");
                           parentRow.fadeOut('fast', function () {
                               parentRow.remove();
                               messageHelper.ShowSuccessMessage("Успешно изтриване!");
                           });
                       }).fail(function (data) {
                           messageHelper.ShowErrorMessage("Възникна проблем при изтриване! Записът не е изтрит!");
                       }).always(
                       function () {
                        certificatesTable.draw( true );
                       });
                    return false;
        };

                var removeEvents = function () {
                    confirmButton.off("click", deleteItem);
                    $(document).on("click", cancelDelete);
                    $(document).off("keypress", onKeyPress);
                };

                var showDeleteLink = function () {
                    confirmButton.hide();
                    deleteLink.show();
                };

                var onKeyPress = function (e) {
                    //Cancel if escape key pressed
                    if (e.which == 27) {
                        cancelDelete();
                    }
                };

                confirmButton.on("click", deleteItem);
                $(document).on("click", cancelDelete);
                $(document).on("keypress", onKeyPress);
                return false;
    }

            AddAntiForgeryToken = function (data) {
                data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
                return data;
            }

            var diplomasListTable = $('#diplomasListTable').DataTable({
                ajax: {
                    "url": "@Url.Action("DiplomaListData", "Dossier")",
                    "type": "POST",
                    "datatype": "json",
                    data: function (data) {
                        data.personId = @ViewBag.PersonId;
                    }
                },
                columns: [
                    {
                        name: 'specialty',
                        data: 'specialty',
                        title: 'Специалност/Профил',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'degree',
                        data: 'degree',
                        title: 'Степен',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'educationInstitution',
                        data: 'educationInstitution',
                        title: 'Образователна институция',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'successfulExam',
                        data: 'successfulExam',
                        title: 'Успешно положен изпит',
                        sortable: true,
                        searchable: false,
                        "render": function (value) {
                            return JsonBGdate(value);
                        }
                    },
                    {
                        name: 'issueDate',
                        data: 'issueDate',
                        title: 'Дата на издаване',
                        sortable: true,
                        searchable: false,
                        "render": function (value) {
                            return JsonBGdate(value);
                        }
                    },
                    {
                        name: 'actions',
                        data: "id",
                        title: "",
                        sortable: false,
                        searchable: false,
                        className: "text-center noExport",
                        "render": function (value) {
                            if ('@isUserDossier' != 'True') {
                                return TemplateToHtml('#editDiploma', value);
                            }
                            return "";
                        }
                    }
                ]
            });

        });

    </script>
}

<script id="templateEdit" type="text/x-handlebars-template">
    <a href="@Url.Action("EditTraining")?trainingId={{this}}" class="btn btn-warning btn-sm" title="Редакция"><i class="fa fa-edit"></i><span class="hidden-sm hidden-xs"> Редакция</span></a>
</script>
<script id="templateDelete" type="text/x-handlebars-template">
    <div class="delete-section">
        <a href="@Url.Action("Delete", "Training")/{{this}}" id ="deleteTraining"class="delete-link btn btn-danger btn-sm" title="Изтриване"><i class="fas fa-trash-alt"></i> <span class="hidden-sm hidden-xs">Изтриване</span></a>
        <div class="btn btn-danger btn-sm delete-confirm" style="display:none" data-delete-id="{{this}}"><i class="fas fa-check"></i> Потвърди Изтриване</div>
    </div>
</script>
<script id="editDiploma" type="text/x-handlebars-template">
    <a href="@Url.Action("EditDiploma")?diplomaId={{this}}" class="btn btn-warning btn-sm" title="Редакция"><i class="fa fa-edit"></i><span class="hidden-sm hidden-xs"> Редакция</span></a>
</script>
<script id="certificateEdit" type="text/x-handlebars-template">
    <a href="@Url.Action("EditCertificate")?certificateId={{this}}" class="btn btn-warning btn-sm" title="Редакция"><i class="fa fa-edit"></i><span class="hidden-sm hidden-xs"> Редакция</span></a>
</script>
<script id="certificateDelete" type="text/x-handlebars-template">
    <div class="delete-section">
        <a href="@Url.Action("Delete", "Certificate")/{{this}}" id ="deleteCertificate" class="delete-link btn btn-danger btn-sm" title="Изтриване"><i class="fas fa-trash-alt"></i> <span class="hidden-sm hidden-xs">Изтриване</span></a>
        <div class="btn btn-danger btn-sm delete-confirm" style="display:none" data-delete-id="{{this}}"><i class="fas fa-check"></i> Потвърди изтриване</div>
    </div>
</script>