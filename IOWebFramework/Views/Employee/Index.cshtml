@{
    ViewData["Title"] = "Служители";
}

    <div class="row">
        <div class="col-md-6 text-left pb-15">
            <form asp-controller = "Cv" asp-action="DownloadCheckedCvs" method="post">
                <input type="text" id="checkedEmployeesIds" name="checkedEmployeesIds" value="" hidden />
                <button type="submit" id="downloadCheckedCvs" class="btn btn-primary" style="display:none"><i class="fas fa-file-archive"></i> Изтегли CV на избраните </button>
</form>           
        </div>
        <div class="col-md-6 text-right pb-15">
            <a asp-action="Add" class="btn btn-success">
                <i class="fa fa-plus"></i>
                Добави Служител
            </a>
        </div>
    </div>
<div class="row">
    <div class="col-md-12">
        <table id="employeesListTable" class="table table-hover table-striped"></table>
    </div>
</div>

@section scripts {
    <script>
        function updateDataTableSelectAllCtrl(table) {
            document.querySelector("#employeesListTable > thead > tr > th.dt-body-center.sorting_disabled").innerHTML = '<input name="select_all" value="1" type="checkbox">';
            var $table = table.table().node();
            var $chkbox_all = $('tbody input[type="checkbox"]', $table);
            var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

            // If none of the checkboxes are checked
            if ($chkbox_checked.length === 0) {
                chkbox_select_all.checked = false;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

                // If all of the checkboxes are checked
            } else if ($chkbox_checked.length === $chkbox_all.length) {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

                // If some of the checkboxes are checked
            } else {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = true;
                }
            }
        }

        $(function () {
            var rows_selected = [];
            var table = $('#employeesListTable').DataTable({
                ajax: {
                    "url": "@Url.Action("EmployeeListData", "Employee")",
                    "type": "POST",
                    "datatype": "json",
                     data: function (d) {
                        d.onlyActive = $("#onlyActive").length == 0 || $("#onlyActive").is(':checked');
                    }
                },
                fnInitComplete: function (settings, json) {
                    initDataTablesSearch(settings);
                    $('div.custom-filter').html(TemplateToHtml('#templateOnlyActive'));
                },
                columns: [
                    {                           
                        orderable: false,
                        searchable: false,
                        width:'1%',
                        targets: 0,                        
                        'className': 'dt-body-center',
                        'render': function (data, type, full, meta) {
                            return '<input type="checkbox">';
                        }
                    },
                    {
                        name: 'td',
                        data: 'td',
                        title: 'ТД',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'name',
                        data: 'name',
                        title: 'Име',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'branch',
                        data: 'branch',
                        title: 'Клон',
                        sortable: true,
                        searchable: true
                    },
                    {
                        name: 'department',
                        data: 'department',
                        title: 'Отдел',
                        sortable: true,
                        searchable: true
                    },
                    // button columns
                    {
                        name: 'dossier',
                        data: "id",
                        sortable: false,
                        searchable: false,
                        className: "text-center noExport",                       
                        "render": function (data, type, row, meta) {
                            return TemplateToHtml('#templateDossier', row.id); // value will be binded to {{this}} in  Handle bar template, in our case value is Id.
                        }
                    },
                    {
                        title: ' ',
                        sortable: false,
                        searchable: false,
                        render: function render(data, type, row, meta) {
                            return TemplateToHtml('#templateCv', row);
                        }
                    },
                    {
                        title: ' ',
                        sortable: false,
                        searchable: false,
                        render: function render(data, type, row, meta) {
                            return TemplateToHtml('#templateEditEmployeePerson', row);
                        }
                    }                   
                ],
                order: [[1, 'asc']],
                'rowCallback': function (row, data, dataIndex) {
                    // Get row ID
                    var rowId = data.id;

                    // If row ID is in the list of selected row IDs
                    if ($.inArray(rowId, rows_selected) !== -1) {
                        $(row).find('input[type="checkbox"]').prop('checked', true);
                        $(row).addClass('selected');
                    }
                },
                language: {
                    select: {
                        rows: {
                            _: "Избрани са %d реда",
                            0: '',
                            1: "Избран е 1 ред"
                        }
                    }
                },
                'processing': true,
                'serverSide': true                               
            });

            $('#employeesListTable tbody').on('click', 'input[type="checkbox"]', function (e) {
                var $row = $(this).closest('tr');

                // Get row data
                var data = table.row($row).data();

                // Get row ID
                var rowId = data.id;

                // Determine whether row ID is in the list of selected row IDs
                var index = $.inArray(rowId, rows_selected);

                // If checkbox is checked and row ID is not in list of selected row IDs
                if (this.checked && index === -1) {
                    rows_selected.push(rowId);

                    // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
                } else if (!this.checked && index !== -1) {
                    rows_selected.splice(index, 1);
                }

                $('#checkedEmployeesIds').val(rows_selected);

                if (rows_selected.length > 1) {
                    $('#downloadCheckedCvs').show();
                } else if (rows_selected.length <= 1) {
                    $('#downloadCheckedCvs').hide();
                }             

                if (this.checked) {
                    $row.addClass('selected');
                } else {
                    $row.removeClass('selected');
                }

                // Update state of "Select all" control
                updateDataTableSelectAllCtrl(table);

                // Prevent click event from propagating to parent
                e.stopPropagation();
            });

            // Handle click on table cells with checkboxes
            $('#employeesListTable').on('click', 'tbody td:first-child, thead th:first-child', function (e) {
                $(this).parent().find('input[type="checkbox"]').trigger('click');
            });

            // Handle click on "Select all" control
            $(document).on('click', 'thead input[name="select_all"]', function (e) {
                if (this.checked) {
                    $('#employeesListTable tbody input[type="checkbox"]:not(:checked)').trigger('click');
                } else {
                    $('#employeesListTable tbody input[type="checkbox"]:checked').trigger('click');
                }

                // Prevent click event from propagating to parent
                e.stopPropagation();
            });

            // Handle table draw event
            table.on('draw', function () {
                // Update state of "Select all" control
                updateDataTableSelectAllCtrl(table);
            });
            
            $(document).on('click', 'a.delete-link', deleteRow);
            $(document).on('click', '#onlyActive', table.draw);

            function deleteRow(e) {
                e.preventDefault();

                var deleteLink = $(this);
                deleteLink.hide();
                var confirmButton = deleteLink.siblings(".delete-confirm");
                confirmButton.show();

                var cancelDelete = function () {
                    removeEvents();
                    showDeleteLink();
                };

                var deleteItem = function () {
                    removeEvents();
                    confirmButton.hide();
                    $.post(
                        '@Url.Action("Delete","Ajax")',
                        AddAntiForgeryToken({ id: confirmButton.attr('data-delete-id') }))
                       .done(function () {
                           var parentRow = deleteLink.parents("tr:first");
                           parentRow.fadeOut('fast', function () {
                               parentRow.remove();
                               messageHelper.ShowSuccessMessage("Успешно изтриване!");
                           });
                       }).fail(function (data) {
                           messageHelper.ShowErrorMessage("Възникна проблем при изтриване! Записът не е изтрит!");
                       }).always(
                       function () {
                        table.draw( true );
                       });
                    return false;
                };

                var removeEvents = function () {
                    confirmButton.off("click", deleteItem);
                    $(document).on("click", cancelDelete);
                    $(document).off("keypress", onKeyPress);
                };

                var showDeleteLink = function () {
                    confirmButton.hide();
                    deleteLink.show();
                };

                var onKeyPress = function (e) {
                    //Cancel if escape key pressed
                    if (e.which == 27) {
                        cancelDelete();
                    }
                };

                confirmButton.on("click", deleteItem);
                $(document).on("click", cancelDelete);
                $(document).on("keypress", onKeyPress);
                return false;
            }

            AddAntiForgeryToken = function (data) {
            data.__RequestVerificationToken = $('input[name=__RequestVerificationToken]').val();
                return data;
            }

        }
        );
    </script>

    <script id="templateCv" type="text/x-handlebars-template">
        <a href="@Url.Action("Index", "Cv")?employeeId={{this.id}}" class="btn btn-primary btn-sm" title="Автобиография"><i class="fas fa-file-download"></i><span class="hidden-sm hidden-xs"> Изтегли CV</span></a>
    </script>

    <script id="templateDossier" type="text/x-handlebars-template">
        <a href="@Url.Action("Index", "Dossier")?employeeId={{this}}" class="btn btn-warning btn-sm" title="Досие"><i class="fa fa-address-card"></i><span class="hidden-sm hidden-xs"> Досие</span></a>
    </script>

    @*<script id="templateEdit" type="text/x-handlebars-template">
        <a href="@Url.Action("Edit", "Employee")?employeeId={{this}}" class="btn btn-success btn-sm" title="Редакция"><i class="fa fa-edit"></i><span class="hidden-sm hidden-xs"> Редакция</span></a>
    </script>*@

    <script id="templateEditEmployeePerson" type="text/x-handlebars-template">
            <a href="@Url.Action("Edit", "Employee" )?employeeId={{this.id}}&personId={{this.personId}}" class="btn btn-success btn-sm" title="Редакция"><i class="fa fa-edit"></i><span class="hidden-sm hidden-xs"> Редакция </span></a>
    </script>

    <script id="templateOnlyActive" type="text/x-handlebars-template">
        <div class="d-block d-lg-inline ml-2 custom-control custom-checkbox align-middle">
            <input type="checkbox" id="onlyActive" name="onlyActive" class="custom-control-input align-middle" checked>
            <label for="onlyActive" class="custom-control-label align-middle">Само активни</label>
        </div>
    </script>

    @*<script id="templateDelete" type="text/x-handlebars-template">
            <div class="delete-section">
                <a href="@Url.Action("Delete", "Employee")/{{this}}" class="delete-link btn btn-danger btn-sm btn-flat" title="Изтриване"><i class="fa fa-remove"></i><span class="hidden-sm hidden-xs">Изтриване</span></a>
                <div class="btn btn-danger btn-sm btn-flat delete-confirm" style="display:none" data-delete-id="{{this}}">Потвърди Изтриване?</div>
            </div>
        </script>*@
}
