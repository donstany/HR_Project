@model IOWebFramework.Core.Models.ProjectDetail.TeamViewModel
@{
    ViewData["Title"] = "Екип";
}

<div class="row">
    <div class="col-md-12">
        <form asp-action="EditTeam" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div id="saveContainer">
                <partial name="_SaveFormContent" model="@("#saveContainer")" />
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x => x.ProjectId)
                <div class="row">
                    <div class="col-lg-6">@Html.EditorFor(x => x.PersonId, "Select2")</div>
                </div>
                <div class="row">
                    <div class="col-lg-6">
                        @Html.EditorFor(x => x.ProjectRoles, "Select2Multi")
                    </div>
                    @if (Model.IsAddingMode)
                    {
                        <div title="Добави Роля в проекта към номенклатурата" class="col-lg-6" style="margin-top:31.5px">
                            <a href="#" onclick="showProjectRoleForm(); return false;" class="btn btn-success">
                                <i class="fa fa-plus"></i>
                                Добави към номенклатурата
                            </a>
                        </div>
                    }
                </div>
                <div class="row">
                    <div class="col-lg-6">@Html.EditorFor(x => x.StartDate, "DateTimeWithTime")</div>
                    <div class="col-lg-6">@Html.EditorFor(x => x.EndDate, "DateTimeWithTime")</div>
                </div>
                <div class="row">
                    <div class="col-lg-6">@Html.EditorFor(x => x.IsActive, "Toggle")</div>
                </div>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Запис" class="btn btn-success" />
                <a asp-action="Index" asp-controller="ProjectDetail" asp-route-projectId="@ViewBag.ProjectId" asp-route-tabToOpen="#nav-team-tab" class="btn btn-danger">Назад</a>
            </div>
        </form>
    </div>
</div>

@section scripts{

    <script id="addProjectRoleTemplate" type="text/x-handlebars-template">
        <form id="projectRoleForm" class="needs-validation" novalidate>
            <div class="form-group">
                <label for="code" class="col-form-label">Код</label>
                <input type="text" class="form-control" id="code" required>
                <div class="invalid-feedback">
                    Полето 'Код' е задължително!
                </div>
            </div>
            <div class="form-group">
                <label for="projectRoleName" class="col-form-label">Име на Роля в проекта</label>
                <input type="text" class="form-control" id="projectRoleName" required>
                <div class="invalid-feedback">
                    Полето 'Име на Роля в проекта' е задължително!
                </div>
            </div>
            <div class="form-group">
                <label for="description" class="col-form-label">Описание</label>
                <textarea class="form-control" id="description"></textarea>
            </div>
            <div class="form-group">
                <div class="custom-control custom-switch">
                    <input type="checkbox" id="isActive" class="custom-control-input" checked />
                    <label class="custom-control-label" for="isActive">Активен</label>
                </div>
            </div>
        </form>
        <div class="modal-footer">
            <button type="submit" class="btn btn-success" form="projectRoleForm">@Html.Raw("Запис")</button>
            <button type="button" class="btn btn-danger dt-reload" data-dismiss="modal">@Html.Raw("Назад")</button>
        </div>
    </script>

    <script>
        function addProjectRole() {
            var code = $('#code').val().trim();
            var projectRoleName = $('#projectRoleName').val().trim();
            var description = $('#description').val().trim();
            var isActive = $('#isActive').is(":checked");

            $.post("@Url.Action("AddProjectRole", "ProjectDetail")", { code: code, projectRoleName: projectRoleName, description: description, isActive: isActive })
                .done(function (result) {
                    if (result === 'ok') {
                        HideModalDialog();
                        setTimeout(function () {window.location.href = '@Url.Action("AddTeam", "ProjectDetail", new { projectId = Model.ProjectId })';  }, 0);
                    }
                    else {
                        HideModalDialog();
                    }
                })
                .fail(function (error) {
                    HideModalDialog();
                });
        }

        function showProjectRoleForm() {
            ShowModalDialog("Добавяне на Роля в проекта към номенклатурата", TemplateToHtml('#addProjectRoleTemplate'));
            modalPopUpValidation(addProjectRole);
        }
    </script>

    <script>
        $("#StartDate").datepicker({
            format: 'dd.mm.yyyy',
            autoclose: true,
        })
            .on('changeDate', function (selected) {
                var startDate = new Date(selected.date.valueOf());
                $('#EndDate').datepicker('setStartDate', startDate);
            })
            .on('clearDate', function (selected) {
                $('#EndDate').datepicker('setStartDate', null);
            });

        $("#EndDate").datepicker({
            format: 'dd.mm.yyyy',
            autoclose: true,
        })
            .on('changeDate', function (selected) {
                var endDate = new Date(selected.date.valueOf());
                $('#StartDate').datepicker('setEndDate', endDate);
            })
            .on('clearDate', function (selected) {
                $('#StartDate').datepicker('setEndDate', null);
            });
    </script>

    @*<script>
        $('#PersonId').on('change', function () {
            debugger;
            var person = $(this).val();
            var projectRoles = $('#ProjectRoles').val();
            var project = @ViewBag.ProjectId;
            if (person !== "" && projectRoles !== "") {
                var url = '@Url.Action("CheckProjectDetailsAreUnique","ProjectDetail")';

                $.ajax({
                    url: url,
                    type: "GET",
                    data: { projectRoles: projectRoles, personId: person, projectId: project },
                    cache: false,
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    traditional: true,
                    success: function (data) {
                        if (data == false) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Грешка при въвеждане!',
                            text: 'Въведеният служител с поне една от въведените роли в този проект вече съществува в системата!',
                            footer: 'Въведете нов служител или различна роля!'
                            })
                            .then(function () {
                                //window.setTimeout(function () {
                                //    document.getElementById("Td").focus();
                                //},0)
                                Swal.close();
                                //$('#PersonId').val("");
                                $('#PersonId').focus();
                            })
                        }
                    }
                });
            }
        }
        );
    </script>*@
}